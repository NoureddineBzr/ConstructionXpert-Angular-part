version: "3.8"
services:
  eureka-server:
    build:
      context: ./eureka-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_SECURITY_USER_NAME=admin
      - SPRING_SECURITY_USER_PASSWORD=admin
    networks:
      - microservices-net

  gateway-service:
    build:
      context: ./gateway-service
    ports:
      - "8888:8888"
    depends_on:
      - eureka-server
    environment:
      - eureka.client.serviceUrl.defaultZone=http://admin:admin@eureka-server:8761/eureka/
    networks:
      - microservices-net

  project-service:
    build:
      context: ./project-service
    ports:
      - "8081:8081"
    environment:
      - eureka.client.serviceUrl.defaultZone=http://admin:admin@eureka-server:8761/eureka/
    depends_on:
      - eureka-server
      - projectdb
    networks:
      - microservices-net

  resource-service:
    build:
      context: ./resource-service
    ports:
      - "8082:8082"
    environment:
      - eureka.client.serviceUrl.defaultZone=http://admin:admin@eureka-server:8761/eureka/
    depends_on:
      - eureka-server
      - resourcedb
    networks:
      - microservices-net

  task-service:
    build:
      context: ./task-service
    ports:
      - "8083:8083"
    environment:
      - eureka.client.serviceUrl.defaultZone=http://admin:admin@eureka-server:8761/eureka/
    depends_on:
      - eureka-server
      - taskdb
    networks:
      - microservices-net

  user-service:
    build:
      context: ./user-service
    ports:
      - "8080:8080"
    environment:
      - eureka.client.serviceUrl.defaultZone=http://admin:admin@eureka-server:8761/eureka/
    depends_on:
      - eureka-server
      - userdb
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - microservices-net

  sonarqube:
    image: sonarqube:latest
    ports:
      - "9000:9000"
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://sonarqubedb:5432/sonarqube
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
    depends_on:
      - sonarqubedb
    networks:
      - microservices-net

  sonarqubedb:
    image: mysql:latest
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonarqube
    volumes:
      - sonarqube-db:/var/lib/mysql/data
    networks:
      - microservices-net

  projectdb:
    image: "mysql:latest"
    restart: always
    environment:
      MYSQL_DATABASE: project_db_2
      MYSQL_ROOT_PASSWORD: jujuRO55
    volumes:
      - project-db:/var/lib/mysql
    networks:
      - microservices-net

  resourcedb:
    image: "mysql:latest"
    restart: always
    environment:
      MYSQL_DATABASE: resource_db_2
      MYSQL_ROOT_PASSWORD: jujuRO55
    volumes:
      - resource-db:/var/lib/mysql
    networks:
      - microservices-net

  taskdb:
    image: "mysql:latest"
    restart: always
    environment:
      MYSQL_DATABASE: task_db_2
      MYSQL_ROOT_PASSWORD: jujuRO55
    volumes:
      - task-db:/var/lib/mysql
    networks:
      - microservices-net

  userdb:
    image: "mysql:latest"
    restart: always
    environment:
      MYSQL_DATABASE: user_db_2
      MYSQL_ROOT_PASSWORD: jujuRO55
    volumes:
      - user-db:/var/lib/mysql
    networks:
      - microservices-net

volumes:
  project-db:
  resource-db:
  task-db:
  user-db:
  sonarqube-db:

networks:
  microservices-net:
    driver: bridge
